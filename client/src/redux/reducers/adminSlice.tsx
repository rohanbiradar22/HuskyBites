import { AdminState } from "@/models/types";
import { createSlice } from "@reduxjs/toolkit";

// Initial state for the admin slice
const initialState: AdminState = {
  loading: false,
  error: null,
  users: [],
  orders: [],
  restaurants: [],
};

// Create a Redux slice for the admin state
const adminSlice = createSlice({
  name: "admin",
  initialState: initialState,
  reducers: {
    // Action to update multiple aspects of the admin state
    adminAction: (state, action) => {
      // Update orders, restaurants, and users data from the payload
      state.orders = action.payload.ordersData;
      state.restaurants = action.payload.restaurantData;
      state.users = action.payload.userData;
    },
    // Action to update the orders data in the admin state
    sortAction: (state, action) => {
      // Update orders data from the payload
      state.orders = action.payload;
    },
    // Action to delete a restaurant from the admin state
    deleteRestaurant: (state, action) => {
      // Assuming action.payload contains the ID of the restaurant to be deleted
      const deletedRestaurantId = action.payload;
      // Filter out the deleted restaurant from the restaurants array
      state.restaurants = state.restaurants.filter(
        (restaurant) => restaurant._id !== deletedRestaurantId
      );
    },
    // Action to delete a user from the admin state
    deleteUser: (state, action) => {
      const deletedUserId = action.payload;
      // Filter out the deleted user from the users array
      state.users = state.users.filter((user) => user._id !== deletedUserId);
    },
  },
  extraReducers: (builder) => {},
});

// Export the actions generated by the admin slice
export const adminActions = adminSlice.actions;

// Export the reducer function for the admin slice
export default adminSlice.reducer;
